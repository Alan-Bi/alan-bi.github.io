<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-02-16T17:15:37-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Alan Bi</title><subtitle>Personal Website for Alan Bi
</subtitle><entry><title type="html">A case for campaign spending limits</title><link href="http://localhost:4000/blog/2019-12-28/case-for-campaign-spending-limits/" rel="alternate" type="text/html" title="A case for campaign spending limits" /><published>2019-12-28T00:00:00-05:00</published><updated>2019-12-28T00:00:00-05:00</updated><id>http://localhost:4000/blog/2019-12-28/campaign-spending-limits</id><content type="html" xml:base="http://localhost:4000/blog/2019-12-28/case-for-campaign-spending-limits/">&lt;p&gt;&lt;em&gt;The following blog post was written as part of the final assignment for my Writing 101 course. It’s quite different from what I usually write and I’m far from a political expert, so please don’t take it too seriously!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Campaign finance has always been a controversial topic, especially ever since 2010. If you aren’t familiar, 2010 was the year the Supreme Court voted on &lt;em&gt;Citizens United v. FEC&lt;/em&gt;, which allowed the formation of Super PACs that can spend unlimited amounts of money on campaigns. This decision caused huge controversy, and people have been calling for the decision to be overruled ever since.&lt;/p&gt;

&lt;p&gt;Congress members often raise millions of dollars for their campaigns to spend on advertisements and other campaign activities, hoping to raise their chances of winning. We’ve all seen the ads on television. Surely, whichever candidate can raise the most money is most likely to win, right? In reality, this is far from the truth; money has less of an influence than you might think. All that money spent by incumbents in elections has little effect in helping them win. Challengers, with less name recognition than incumbents, may benefit slightly more from ads, but overall much less than you’d expect.&lt;/p&gt;

&lt;p&gt;Why is this the case? There are many reasons, but one stands above them all: &lt;a href=&quot;http://pricetheory.uchicago.edu/levitt/Papers/LevittUsingRepeatChallengers1994.pdf&quot;&gt;candidate quality&lt;/a&gt;. Some candidates are charismatic, have sophisticated platforms, and otherwise trump their opponents in every way. These people are already highly favored to win, and people are more willing to donate to candidates they think will succeed. Therefore, winning candidates naturally have more money to spend, even if that money didn’t help them at all.&lt;/p&gt;

&lt;p&gt;Given this revelation, why do candidates still receive and spend so much money on elections? As an example, candidates spent about $6 billion during both the 2016 and 2018 election cycles, according to &lt;a href=&quot;https://www.opensecrets.org/overview/cost.php&quot;&gt;OpenSecrets.org&lt;/a&gt;. Why don’t we just put a cap on the money they’re allowed to spend to stop this wastefulness?&lt;/p&gt;

&lt;p&gt;This is exactly the question I wanted to answer. The obvious risk of this policy is that by limiting how much candidates can spend on advertising, challengers, with lower name recognition, will have harder times winning elections. However, because campaign spending has marginal usefulness, putting a cap on total spending wouldn’t have any major effect in preventing challengers from gaining name recognition or otherwise dramatically affect election results.&lt;/p&gt;

&lt;p&gt;Luckily, a few states already have voluntary spending limits for their state legislature elections, so using a statistical model, I could test whether these spending limits had any effect on incumbent vs. challenger election rates in the 2018 elections. Given the differences in structure between states’ legislatures, I accounted for their professionalism level using data from the &lt;a href=&quot;http://www.ncsl.org/research/about-state-legislatures/full-and-part-time-legislatures.aspx#average&quot;&gt;National Conference of State Legislatures&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As expected, there was almost no link between spending limits and decreased challenger election rates. In fact, taken at face value, the data showed the opposite: spending limits hurt incumbents more than they hurt challengers.&lt;/p&gt;

&lt;p&gt;Of course, the relation was so weak that it’s almost certainly due to random chance. Whether this is because there were only four states with spending limits, they were all voluntary, or they truly had no effect on election results, we don’t know. However, the fact that we found close to zero connection between the two can only help the case for spending limits.&lt;/p&gt;

&lt;p&gt;Now that we can mitigate one of the biggest arguments against spending limits—that they unfairly hurt challengers more than incumbents—we can start arguing why campaign spending limits are a good thing.&lt;/p&gt;

&lt;p&gt;First off, they eliminate wasteful and excessive spending that could be better spent elsewhere. For example, because campaigning is so important today, many politicians spend several hours a day fundraising; even if they don’t have an election coming up, they are expected to raise money for other members of their party. By imposing a spending limit on campaigns, Congress members can spend more time on enacting policy and other activities.&lt;/p&gt;

&lt;p&gt;Another benefit is that a cap on campaign donations prevents any person or company from giving an excessive amount of money to any one campaign. While large donations, if used for campaign spending, probably won’t make a big impact on election results, they can have other negative effects. In some cases, large donations can be used or seen as buying influence or political favors from politicians who want more money. After all, would you feel comfortable if a large corporation secretly handed millions of dollars to a candidate meant to represent you? Luckily, current laws already prevent this from happening, but you get the point.&lt;/p&gt;

&lt;p&gt;To conclude, politicians spend an absurd amount of money on campaigns. Despite all this spending, most candidates would do just as well with just a fraction of their expenditures. Therefore, by imposing campaign spending limits, we can potentially save our politicians time, money, and energy, as well as reduce the amount of shady dealings in Congress. At a time when concerns over campaign financing are at an all-time high, imposing these regulations could, if nothing else, be paramount to increasing public trust in our political institutions.&lt;/p&gt;</content><author><name></name></author><summary type="html">The following blog post was written as part of the final assignment for my Writing 101 course. It’s quite different from what I usually write and I’m far from a political expert, so please don’t take it too seriously!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/spending_limits.png" /></entry><entry><title type="html">Useful Chrome extensions</title><link href="http://localhost:4000/blog/2019-11-20/useful-chrome-extensions/" rel="alternate" type="text/html" title="Useful Chrome extensions" /><published>2019-11-20T00:00:00-05:00</published><updated>2019-11-20T00:00:00-05:00</updated><id>http://localhost:4000/blog/2019-11-20/useful-chrome-extensions</id><content type="html" xml:base="http://localhost:4000/blog/2019-11-20/useful-chrome-extensions/">&lt;p&gt;In a &lt;a href=&quot;/blog/2019-05-25/my-computer-desktop-arrangement/&quot;&gt;previous blog post&lt;/a&gt;, I showed off some of the apps I found useful on my computer. Today, I’ll be writing about the Chrome extensions that help me browse the web more productively.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/blog-images/2019/extension_bar.png&quot; alt=&quot;My chrome extensions&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ublock-origin&quot;&gt;uBlock Origin&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/ublock.png&quot; alt=&quot;uBlock Origin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First up is an ad blocker, which is pretty self-explanatory. Of all the options, &lt;a href=&quot;https://github.com/gorhill/uBlock&quot;&gt;uBlock Origin&lt;/a&gt; is generally regarded as one of the best, which is why I chose them.&lt;/p&gt;

&lt;h3 id=&quot;google-translate&quot;&gt;Google Translate&lt;/h3&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
    &lt;img alt=&quot;Google Translate&quot; src=&quot;/assets/images/blog-images/2019/google_translate.png&quot; style=&quot;width: 30%;&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;An extension I installed in high school when I was taking AP Spanish, &lt;a href=&quot;https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb?hl=en&quot;&gt;Google Translate&lt;/a&gt; still has its uses here and there. When you see text in another language, you can simply highlight it, and the extension will translate it into your default language. Alternatively, you can click on the extension icon and manually type/paste text. And finally, if you stumble across a page that’s written in another language, it can translate the entire page for you.&lt;/p&gt;

&lt;h3 id=&quot;lastpass&quot;&gt;LastPass&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/lastpass.jpg&quot; alt=&quot;LastPass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used to have the same password for all my accounts, but I finally gathered my senses and switched to a password manager; specifically, &lt;a href=&quot;https://lastpass.com/&quot;&gt;LastPass&lt;/a&gt;. The useful thing about LastPass is that it can generate passwords for you and autofill your account details on every login page, thanks to the Chrome extension. Similarly, there’s a mobile app that allows you to autofill passwords on your phone, so you rarely ever have to manually copy/paste anything.&lt;/p&gt;

&lt;h3 id=&quot;statsify&quot;&gt;Statsify&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_extension.png&quot; alt=&quot;Statsify&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Shameless plug: Statsify is a web app that allows you to visualize various stats and info about a website. Download the extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/statsify/nmifmhiilofkndfejgeigkkpmkmlgoeb?hl=en-US&amp;amp;gl=US&quot;&gt;here&lt;/a&gt;, visit the website at &lt;a href=&quot;https://www.statsify.us&quot;&gt;https://www.statsify.us&lt;/a&gt;, and learn more about the development process &lt;a href=&quot;/blog/2019-03-03/my-experience-launching-statsify/&quot;&gt;here&lt;/a&gt;!&lt;/p&gt;

&lt;h3 id=&quot;whatruns&quot;&gt;WhatRuns&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/whatruns.png&quot; alt=&quot;WhatRuns&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.whatruns.com/&quot;&gt;WhatRuns&lt;/a&gt; is an extension that tells you what technologies a website runs on. It’s useful if you’re just curious about how websites are built, and it might help you get an idea of which technologies are popular.&lt;/p&gt;

&lt;h3 id=&quot;the-great-suspender&quot;&gt;The Great Suspender&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/great_suspender.png&quot; alt=&quot;The Great Suspender&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you’re like me, you have a ton of tabs open in your browser, which unfortunately uses up a lot of battery. Luckily, the &lt;a href=&quot;https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg&quot;&gt;Great Suspender&lt;/a&gt; is an extension that automatically suspends the tabs you haven’t used in a while. This saves battery while still maintaining your tabs, so when you actually need to use a tab, you can simply click on it to “unsuspend” and use it as normal.&lt;/p&gt;

&lt;h3 id=&quot;toby&quot;&gt;Toby&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/toby.png&quot; alt=&quot;Toby&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gettoby.com/&quot;&gt;Toby&lt;/a&gt; allows you to save collections of tabs. You can do things like save all your current tabs into a new collection, open all tabs in a collection, and more. It’s a useful extension especially if you have several workspaces of tabs for different projects you’re working on.&lt;/p&gt;

&lt;h3 id=&quot;auto-replay-for-youtube&quot;&gt;Auto Replay for YouTube&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/auto_replay.png&quot; alt=&quot;Auto Replay&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/auto-replay-for-youtube/kanbnempkjnhadplbfgdaagijdbdbjeb&quot;&gt;Auto Replay for YouTube&lt;/a&gt; is another simple extension. It does exactly as you’d expect; it allows you to play YouTube videos on repeat, as well as customize the start and end times of the video loop.&lt;/p&gt;

&lt;h3 id=&quot;grammarly&quot;&gt;Grammarly&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/grammarly.png&quot; alt=&quot;Grammarly&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.grammarly.com/&quot;&gt;Grammarly&lt;/a&gt; is definitely a must-have extension; any time you’re writing an email, completing an online form, or otherwise writing something, Grammarly checks to make sure you’re not making any English mistakes. It’s free and can save you from making embarrassing typos in important emails or documents.&lt;/p&gt;

&lt;h3 id=&quot;docs-pdfpowerpoint-viewer&quot;&gt;Docs PDF/PowerPoint Viewer&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/docs_viewer.png&quot; alt=&quot;Docs PDF/PowerPoint Viewer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lastly, &lt;a href=&quot;https://chrome.google.com/webstore/detail/docs-pdfpowerpoint-viewer/nnbmlagghjjcbdhgmkedmbmedengocbn&quot;&gt;Docs PDF/PowerPoint Viewer&lt;/a&gt; is an extension by Google that allows you to open and view various documents in a new tab rather than downloading them. Lots of times, a website will have a download link for a PDF or Word document when all I want is to just briefly look at it. This extension allows me to do just that and keep my Downloads folder clean.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;As of writing this, these are all the extensions I have in Chrome. However, I’m always looking for new and useful extensions, so shoot me an email if you have something you want to share!&lt;/p&gt;</content><author><name></name></author><summary type="html">In a previous blog post, I showed off some of the apps I found useful on my computer. Today, I’ll be writing about the Chrome extensions that help me browse the web more productively.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/chrome_extensions.jpg" /></entry><entry><title type="html">Takeaways from the first month of college</title><link href="http://localhost:4000/blog/2019-10-16/takeaways-from-college/" rel="alternate" type="text/html" title="Takeaways from the first month of college" /><published>2019-10-16T00:00:00-04:00</published><updated>2019-10-16T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019-10-16/takeaways-from-college</id><content type="html" xml:base="http://localhost:4000/blog/2019-10-16/takeaways-from-college/">&lt;p&gt;At the end of August, I flew from one coast of the US to the other, eager to begin college. The next few weeks passed by in a flurry of activity and excitement, and now, after about two months, things are finally beginning to settle down. From my &lt;em&gt;very limited&lt;/em&gt; experience of college, I’ve compiled a personal list of takeaways and lessons learned for how to adjust to college life.&lt;/p&gt;

&lt;h3 id=&quot;1-talk-to-random-people&quot;&gt;1. Talk to random people&lt;/h3&gt;

&lt;p&gt;During orientation week, talk to as many people as you can. Although it can be scary, it’s easy once you realize how little is at stake. Most people you meet during the first week won’t actually be your true friends, so worst case scenario, things are awkward and you find someone else to talk to. And in the best case scenario, the people you meet actually &lt;em&gt;do&lt;/em&gt; become your closest friends!&lt;/p&gt;

&lt;p&gt;In addition, if you get stuck for conversation, just fall back to a list of generic questions: What’s your name? What’s your major? Where are you from? What dorm are you in? Etc.&lt;/p&gt;

&lt;h3 id=&quot;2-try-out-a-lot-of-clubs&quot;&gt;2. Try out a lot of clubs&lt;/h3&gt;

&lt;p&gt;Freshman year of college is probably one of the better times to explore your interests, even if you already know your major. For example, during the first few weeks, I attended info sessions and meetings for more clubs than I could realistically handle. Experimenting with a wide range of interests ultimately helped me get a better idea of what I like, and now, I’m only part of the clubs I truly enjoy and have the time for.&lt;/p&gt;

&lt;h3 id=&quot;3-make-use-of-your-schools-resources&quot;&gt;3. Make use of your school’s resources&lt;/h3&gt;

&lt;p&gt;Most schools offer a variety of services for students, such as academic advising, career help, and health/wellness. These services are usually free, so why not make the most of them? For example, if you’re interested in working in industry, going to the career fair can be a good experience; while it’ll be difficult to find an internship as a freshman, you’ll at least get a feel for what it’s like and get some free company swag!&lt;/p&gt;

&lt;h3 id=&quot;4-have-free-time-to-recharge&quot;&gt;4. Have free time to recharge&lt;/h3&gt;

&lt;p&gt;Spend some time every day or week doing relaxing stuff. Also, try to get seven, eight hours of sleep as much as possible. So far, it’s definitely been doable for me, and hopefully with proper time management it’s something one can keep up throughout most of college (&lt;em&gt;zero&lt;/em&gt; guarantees here though).&lt;/p&gt;

&lt;h3 id=&quot;5-have-fun&quot;&gt;5. Have fun&lt;/h3&gt;

&lt;p&gt;Everyone has heard the statement that college is the best time of your life, so it’s obligatory that I include this. Spend time with friends, explore your college town/city, etc. Enjoy yourself!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I’ve only been in college for two months now, so in a year or two I’ll probably look back on this and roll my eyes/laugh at myself. But for the time being, its a good record of my thoughts and takeaways, and hopefully it’s something seniors currently applying to college can learn from!&lt;/p&gt;</content><author><name></name></author><summary type="html">At the end of August, I flew from one coast of the US to the other, eager to begin college. The next few weeks passed by in a flurry of activity and excitement, and now, after about two months, things are finally beginning to settle down. From my very limited experience of college, I’ve compiled a personal list of takeaways and lessons learned for how to adjust to college life.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/college.jpg" /></entry><entry><title type="html">Lessons learned with Bidbar</title><link href="http://localhost:4000/blog/2019-09-13/lessons-learned-with-bidbar/" rel="alternate" type="text/html" title="Lessons learned with Bidbar" /><published>2019-09-13T00:00:00-04:00</published><updated>2019-09-13T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019-09-13/lessons-learned-bidbar</id><content type="html" xml:base="http://localhost:4000/blog/2019-09-13/lessons-learned-with-bidbar/">&lt;p&gt;This past month, I launched my second product: Bidbar, a macOS app that allows programmers to manage Terminal commands from the menu bar and run them with keyboard shortcuts. Since my first launch of &lt;a href=&quot;/blog/2019-03-03/my-experience-launching-statsify/&quot;&gt;Statsify&lt;/a&gt;, I’ve done many things differently and experienced new successes and failures with Bidbar, resulting in new lessons learned. In this short blog post, I’ll share three of these lessons.&lt;/p&gt;

&lt;h2 id=&quot;idea-validation&quot;&gt;Idea validation&lt;/h2&gt;

&lt;p&gt;Before I began coding Bidbar in Swift, I made several attempts to gather feedback from potential users. This was important not just to make sure it solves a need, but also to generate interest in the app before launching it. When doing idea validation, you should aim to have detailed conversations with lots of people in your target market; it’s probably not enough just to post on various sites like Reddit or Indie Hackers (which is regrettably what I did).&lt;/p&gt;

&lt;h2 id=&quot;pre-launch-marketing&quot;&gt;Pre-launch marketing&lt;/h2&gt;

&lt;p&gt;You don’t need to wait until you launch to do all your marketing. As I began writing Bidbar in Swift, I created a mailing list and landing page to gather interested users. With some limited posting on community sites and $10 spent on Facebook ads, I got about 20 signups. Lots of startups are able to gather thousands of subscribers months before launch.&lt;/p&gt;

&lt;h2 id=&quot;ab-testing&quot;&gt;A/B testing&lt;/h2&gt;

&lt;p&gt;If you’re not familiar, A/B testing is when you have multiple variants of a web page and track which variant performs best. It sounds very complicated, but it’s actually super simple to do using existing A/B testing services on the market. For example, I used Google Optimize in conjunction with Google Analytics, which took at most an hour or two to set up three variants. By changing the text and layout of my landing page to target different audiences, I was able to improve my conversion rate (percentage of visitors who download the app) by several percentage points.&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;p&gt;On August 1, I launched Bidbar on &lt;a href=&quot;https://www.producthunt.com/posts/bidbar&quot;&gt;Product Hunt&lt;/a&gt; and other sites. As of today, Bidbar has 209 upvotes on Product Hunt and has been downloaded 190 times.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Because I’ve started college and have less free time, I’m keeping this blog post &lt;em&gt;very&lt;/em&gt; short and sweet. However, I still hope to write blog posts once every few weeks, so expect to see another one up soon!&lt;/p&gt;</content><author><name></name></author><summary type="html">This past month, I launched my second product: Bidbar, a macOS app that allows programmers to manage Terminal commands from the menu bar and run them with keyboard shortcuts. Since my first launch of Statsify, I’ve done many things differently and experienced new successes and failures with Bidbar, resulting in new lessons learned. In this short blog post, I’ll share three of these lessons.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/bidbar.png" /></entry><entry><title type="html">Different ways to learn coding</title><link href="http://localhost:4000/blog/2019-07-11/ways-to-learn-coding/" rel="alternate" type="text/html" title="Different ways to learn coding" /><published>2019-07-11T00:00:00-04:00</published><updated>2019-07-11T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019-07-11/resources-to-learn-coding</id><content type="html" xml:base="http://localhost:4000/blog/2019-07-11/ways-to-learn-coding/">&lt;p&gt;In this day and age, many people want to learn how to code without knowing where to start. People often find the syntax of programming languages to be intimidating; meanwhile, others want to jump straight to building complex apps and websites without understanding basic programming concepts first. While it’s certainly a viable and common path to focus on a specific subset of coding (such as HTML/CSS or data visualization), like for those who just need to know a little bit of coding for their jobs or people who just want to have fun building simple static websites, this blog post will focus on how to learn the fundamentals of programming for those who want to pursue computer science further, such as in college or as a career path.&lt;/p&gt;

&lt;h3 id=&quot;programming-classes&quot;&gt;Programming classes&lt;/h3&gt;

&lt;p&gt;First, let’s start with the obvious/common way to learn CS: taking a programming class. Many colleges offer an Intro to Programming/CS class, and some high schools offer AP Computer Science or AP Computer Science Principles. If you take a programming class and have a decent teacher, chances are, you’ll learn the fundamentals pretty well as long as you pay attention, do the assigned homework or practice problems, and don’t cheat. Especially with the rising popularity of CS and the prevalence of code on the Internet, it’s not uncommon to see people &lt;a href=&quot;https://www.nytimes.com/2017/05/29/us/computer-science-cheating.html&quot;&gt;cheating&lt;/a&gt; in their classes, but it goes without saying that you’re setting yourself up for failure if you take this route.&lt;/p&gt;

&lt;h3 id=&quot;online-courses&quot;&gt;Online courses&lt;/h3&gt;

&lt;p&gt;Of course, not everyone has the opportunity or is willing to take a programming class in person. An alternative to this is to take an online course. There are a plethora of programming courses offered by Coursera, edX, Codecademy, Udemy, and other MOOCs (massive open online course), which may be enough for your needs. I personally have not looked into any of the intro programming classes on these websites, so I can’t say much with authority. However, given that an online setting is often less interactive than an actual classroom, my general advice would be to supplement these courses with projects or learning on your own if you feel the material isn’t sinking in. Thus, you have a combination of passive and active learning.&lt;/p&gt;

&lt;h3 id=&quot;learning-by-doing&quot;&gt;Learning by doing&lt;/h3&gt;

&lt;p&gt;A third option is to learn by doing. It’s very common to learn new languages or technologies by simply building a project and picking up the syntax along the way. Learning the fundamentals this way can give you a better idea of what programming is often like; however, it’s also easy to create holes in your knowledge this way. For example, jumping into a large project without knowing of basic concepts like inheritance, polymorphism, or encapsulation (most of which are covered in intro classes) can lead to a messy codebase and the creation of bad coding habits. Instead, if you take this approach, I’d recommend at least having a book or curriculum of some sort and integrating all the concepts into your projects in some way or another, ensuring that you’re learning the right things.&lt;/p&gt;

&lt;h3 id=&quot;practice-problems&quot;&gt;Practice problems&lt;/h3&gt;

&lt;p&gt;Learning by doing doesn’t always have to be building big projects though; it can also be solving practice problems. In my opinion, everyone should take a look at sites like &lt;a href=&quot;https://practiceit.cs.washington.edu/&quot;&gt;Practice-It&lt;/a&gt; or &lt;a href=&quot;https://projecteuler.net/&quot;&gt;Project Euler&lt;/a&gt;. Practice-It contains over a thousand practice problems grouped by topic and is a great way to practice and reinforce your CS knowledge. In fact, it was the primary resource I used to learn data structures, which goes to show much I recommend it. Project Euler is similar in that it contains hundreds of problems, but different because it focuses on algorithmic problems. Learning how to logically approach these challenges builds problem solving skills and a stronger mindset, as well as helps prepare you for coding interviews. Of course, these are just two of many sites, the others of which you can easily explore as you begin to learn coding.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;All in all, there are many paths to approach computer science, largely due to the field’s surge in popularity. People learn in different ways, so all I can do is share various approaches and resources that I stumbled upon when I began coding (which was not too long ago). Of course, if you need additional guidance or have any questions, please feel free to reach out and I’d be glad to help!&lt;/p&gt;</content><author><name></name></author><summary type="html">In this day and age, many people want to learn how to code without knowing where to start. People often find the syntax of programming languages to be intimidating; meanwhile, others want to jump straight to building complex apps and websites without understanding basic programming concepts first. While it’s certainly a viable and common path to focus on a specific subset of coding (such as HTML/CSS or data visualization), like for those who just need to know a little bit of coding for their jobs or people who just want to have fun building simple static websites, this blog post will focus on how to learn the fundamentals of programming for those who want to pursue computer science further, such as in college or as a career path.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/learn_coding.jpg" /></entry><entry><title type="html">Reflecting on my high school experience</title><link href="http://localhost:4000/blog/2019-06-13/high-school-experience-reflection/" rel="alternate" type="text/html" title="Reflecting on my high school experience" /><published>2019-06-13T00:00:00-04:00</published><updated>2019-06-13T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019-06-13/high-school-experience</id><content type="html" xml:base="http://localhost:4000/blog/2019-06-13/high-school-experience-reflection/">&lt;p&gt;When I entered high school, I was adamant on a few goals: take all the hardest classes, get all As, and go to a good college. At the end of that first semester, I ended with an A- in my English class, failing at my second goal just like that.&lt;/p&gt;

&lt;p&gt;In hindsight, I’m almost grateful that I got that A-. It’s easy to see now that my freshman year goals were naive; taking hard classes isn’t always the best idea, not having a 4.0 doesn’t make you a failure just as having a 4.0 doesn’t guarantee you a spot at a good college, and going to a good college is not the end-all-be-all. And after getting that A-, I slowly shifted my focus to more important things rather than continuing to worry about getting all As.&lt;/p&gt;

&lt;p&gt;My biggest new use of time was finally exploring computer science in my free time to see if it was something I truly enjoyed. I had already taken AP Computer Science, and now anything more I learned would have to be done through self-teaching. Luckily, I found that I did enjoy it, and my time moved from doing homework and studying for tests to creating apps and learning data structures, dedicating my efforts towards extracurricular activities that I was truly passionate about.&lt;/p&gt;

&lt;p&gt;That’s not to say that I stopped caring about school or thought that the classes weren’t useful; in fact, it was far from that. I still did my best to complete homework assignments on time, study for my tests, and make a genuine effort to learn. Even in classes I disliked at the time but had to take in order to graduate, I learned things I wouldn’t have otherwise, which has helped me become a more well-rounded individual. But gone were the days of checking my grades three times a day and calculating what score I needed to get a certain grade in a class.&lt;/p&gt;

&lt;p&gt;By spending less time on trivial goals, I could spend time on things that mattered. I improved my coding skills by building apps and websites. I developed a stronger critical thinking ability by solving coding problems on &lt;a href=&quot;https://practiceit.cs.washington.edu/&quot;&gt;Practice-It&lt;/a&gt;. I made new friends by joining Computer Club. And I learned organization, leadership, teamwork, and business skills by co-founding &lt;a href=&quot;https://teamscode.com&quot;&gt;TeamsCode&lt;/a&gt;, skills that I couldn’t have learned sitting in a classroom.&lt;/p&gt;

&lt;p&gt;High school was filled with both ups and downs. Overall though, I’m very grateful for the opportunities and memories that Mercer Island High School provided me. Leaving will be bittersweet, but regardless, I’m excited to enter college to explore new opportunities and create new friendships.&lt;/p&gt;</content><author><name></name></author><summary type="html">When I entered high school, I was adamant on a few goals: take all the hardest classes, get all As, and go to a good college. At the end of that first semester, I ended with an A- in my English class, failing at my second goal just like that.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/high_school.jpg" /></entry><entry><title type="html">My computer desktop arrangement</title><link href="http://localhost:4000/blog/2019-05-25/my-computer-desktop-arrangement/" rel="alternate" type="text/html" title="My computer desktop arrangement" /><published>2019-05-25T00:00:00-04:00</published><updated>2019-05-25T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019-05-25/desktop-arrangement</id><content type="html" xml:base="http://localhost:4000/blog/2019-05-25/my-computer-desktop-arrangement/">&lt;p&gt;About a month ago, I wrote a &lt;a href=&quot;https://teamscode.com/blog/teamscode-internal-resources/&quot;&gt;blog post&lt;/a&gt; describing the internal resources used by &lt;a href=&quot;https://teamscode.com/&quot;&gt;TeamsCode&lt;/a&gt;, a 501(c)(3) nonprofit organization that organizes biannual programming contests in Washington and Oregon. Building off of this, I thought it’d be cool to share some of the tools I use on my own computer, at the very least so that I can look back on it in five years and see how things have changed. So without further ado, let’s start with the apps in my dock:
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/blog-images/2019/dock_full.png&quot; alt=&quot;Apps in my dock&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;
There’s a lot to break down here, but they can be roughly categorized into groups.&lt;/p&gt;

&lt;h3 id=&quot;web-browsers-and-general-apps&quot;&gt;Web Browsers and General Apps&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/dock_browsers.png&quot; alt=&quot;Browser/general app group&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As on all Macs, we start with the Finder icon. Following that, I have the &lt;a href=&quot;https://www.grammarly.com/&quot;&gt;Grammarly&lt;/a&gt; desktop app, which I use whenever I need to check some text for grammar/writing style. These days, I only ever really use it to spellcheck my blog posts (the next time I use it will be for this post). Following that is &lt;a href=&quot;https://getstation.com/&quot;&gt;Station&lt;/a&gt;, which essentially allows you to access various web apps within a single app. I use this as a unified place to access my Gmail accounts, Trello boards, and Slack channels. Lastly are Safari, Firefox, and Chrome. I pretty much only use Chrome, but if a site is acting weird on Chrome, I’ll often switch browsers to see if it’s a browser-specific issue or a problem with the site.&lt;/p&gt;

&lt;h3 id=&quot;development-tools&quot;&gt;Development Tools&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/dock_dev.png&quot; alt=&quot;Development tools group&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First off, we have Visual Studio and Visual Studio Code. I mainly used Visual Studio for my C# apps, and use VSCode very frequently for HTML/CSS/JS projects (including for this website). IntelliJ and PyCharm are used for Java and Python projects, respectively, and I’m currently trying out WebStorm as an alternative to VSCode for my upcoming Node.js project &lt;a href=&quot;https://www.codejoust.co/&quot;&gt;CodeJoust&lt;/a&gt; (all the JetBrains tools are free as a student). Next is Unity, which isn’t an IDE or text editor, but I use it in conjunction with Visual Studio to do game development. Sublime Text is useful to make quick edits to a file, and XCode is for publishing apps to the iOS app store, although I rarely use it to write code. And finally, I occasionally use Postman if I need to debug an API call.&lt;/p&gt;

&lt;h3 id=&quot;microsoft-office&quot;&gt;Microsoft Office&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/dock_office.png&quot; alt=&quot;Microsoft office group&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This group is pretty self-explanatory. All students at Mercer Island High School get access to Microsoft Office, so I have the luxury of downloading these apps on my computer. I mainly use Word and every now and then use OneNote, PowerPoint, and Excel. I’ll probably start using Outlook more often once I enter college (my school email is provided through Outlook). Overall, MS Office combined with Google’s apps (Gmail, Docs, Sheets, Slides, etc.) comprise most of my productivity tools.&lt;/p&gt;

&lt;h3 id=&quot;miscellaneous&quot;&gt;Miscellaneous&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/dock_misc.png&quot; alt=&quot;Misc. tool group&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The last group is mostly made up of the default macOS apps. I use Notes when I simply need to write something down and OneNote is too heavy-duty. Messages is linked with my phone number, so I can more easily respond to texts from my computer. I always have Terminal open with a tab for each of the projects I’m currently working on, making it quick and easy to run them locally, deal with version control, etc. The last two apps are Spotify and Preview. Spotify is pretty self-explanatory, and Preview actually isn’t saved to my dock, but I use it frequently; right now, I have open a PDF book that I’m slowly working my way through.&lt;/p&gt;

&lt;h2 id=&quot;menu-bar&quot;&gt;Menu bar&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/menu_bar_collapsed.png&quot; alt=&quot;Menu bar collapsed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also have a lot of apps in my menu bar. The primary four are pictured above; first is an app called Awareness, which sounds a bell after a set amount of time reminding you to take a break from your computer. I’ve set it up to sound every 20 minutes in an attempt to follow the &lt;a href=&quot;https://www.aoa.org/documents/infographics/SYVM2016Infographics.pdf&quot;&gt;20-20-20 rule&lt;/a&gt;. The next two are Hotspot Shield and Hexatech, two VPNs that I use whenever I’m at school (for whatever reason, the guest wifi blocks search engines including Google, Bing, DuckDuckGo, etc.). After the Wi-Fi and Volume icons is an app called &lt;a href=&quot;https://dozermac.com/&quot;&gt;Dozer&lt;/a&gt;, which helps keep your menu bar neat. Clicking on the Dozer icon reveals my other menu bar apps:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/blog-images/2019/menu_bar_expanded.png&quot; alt=&quot;Menu bar expanded&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Starting from the left is Muzzle, which automatically turns on Do Not Disturb to silence notifications when screen sharing. Next is Spectacle, which allows you to use keyboard shortcuts to rearrange desktop windows. OneDrive is occasionally useful to manage my Office files, and the icon to the right of that is AirPlay, which I pretty much never use. After that is Fanny, which I find useful to keep track of my computer’s temperature and fan speed, especially when it starts to get very warm. The last two apps are BeardedSpice and f.lux; BeardedSpice allows you to use the Mac keyboard audio controls to play/pause audio/videos on YouTube and other websites, and f.lux adjusts the screen’s color and light display based on your sleeping schedule to make it easier on the eyes. 
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;These are all the important apps on my computer. In a future blog post, I might also consider sharing the browser bookmarks and extensions that I find useful. In the meantime, I hope you enjoyed this blog post and discovered a new and helpful app!&lt;/p&gt;</content><author><name></name></author><summary type="html">About a month ago, I wrote a blog post describing the internal resources used by TeamsCode, a 501(c)(3) nonprofit organization that organizes biannual programming contests in Washington and Oregon. Building off of this, I thought it’d be cool to share some of the tools I use on my own computer, at the very least so that I can look back on it in five years and see how things have changed. So without further ado, let’s start with the apps in my dock: There’s a lot to break down here, but they can be roughly categorized into groups.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/empty_desktop.png" /></entry><entry><title type="html">What I learned at the Def Hacks Seattle 2019 Hackathon</title><link href="http://localhost:4000/blog/2019-05-03/what-i-learned-at-def-hacks/" rel="alternate" type="text/html" title="What I learned at the Def Hacks Seattle 2019 Hackathon" /><published>2019-05-03T00:00:00-04:00</published><updated>2019-05-03T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019-05-03/what-i-learned-at-def-hacks</id><content type="html" xml:base="http://localhost:4000/blog/2019-05-03/what-i-learned-at-def-hacks/">&lt;p&gt;On April 13, I attended the Def Hacks Seattle 2019 hackathon, hosted by my friend &lt;a href=&quot;https://chrismelliott.com/&quot;&gt;Chris Elliott&lt;/a&gt;. This was my second hackathon ever, the first being the Def Hacks Seattle hackathon back in 2017, during which Chris and I co-founded &lt;a href=&quot;https://teamscode.com/&quot;&gt;TeamsCode&lt;/a&gt;. This time around, I was going in solo and wanted to make some progress on my upcoming project &lt;a href=&quot;https://www.getbidbar.com/&quot;&gt;Bidbar&lt;/a&gt;. As such, my hackathon experience was a bit atypical; instead of competing and working on a new project, I was coming in with an existing project I wanted to make progress on (I knew I couldn’t compete or present my project since I already worked on it beforehand). In addition, I didn’t stay the whole time; I came at about 11 am and left at 11 pm, so only half of the experience of the full hackathon. Nonetheless, I still learned a lot of things, which I’m going to share in this blog post.&lt;/p&gt;

&lt;h3 id=&quot;try-to-meet-new-people&quot;&gt;Try to meet new people&lt;/h3&gt;
&lt;p&gt;At the event, I didn’t have a team, but I knew beforehand that I didn’t want to go there and just work for several hours by myself. I tried to go around to as many teams as I could to ask them about their projects. I learned a lot this way and met many people who I’ll be seeing next year in college. Overall, I’d say this is one of the best things that you can get out of a hackathon.&lt;/p&gt;

&lt;h3 id=&quot;take-breaks&quot;&gt;Take breaks&lt;/h3&gt;
&lt;p&gt;Even though the goal at hackathons is to crank something out after X hours of hard work, it’s hard to focus for so long. I found myself getting easily distracted or unfocused after working for too long at a time, so I took periodic breaks where I just walked around, talked to friends, or did something else.&lt;/p&gt;

&lt;h3 id=&quot;make-use-of-mentors&quot;&gt;Make use of mentors&lt;/h3&gt;
&lt;p&gt;I unfortunately didn’t follow this advice, but there were a lot of mentors at the event with industry experience meant to help the students (I’m not sure if this is the same at all hackathons though). I spent over an hour trying to get the getbidbar.com domain to point to bidbar.netlify.com. The fix turned out to be a very simple one-line change in the DNS settings, which I could have figured out earlier with the help of mentors or even other students.&lt;/p&gt;

&lt;h3 id=&quot;eat-as-healthy-as-possible&quot;&gt;Eat (as) healthy (as possible)&lt;/h3&gt;
&lt;p&gt;We had pizza for lunch and pizza for dinner, and there was an unlimited supply of chip bags. I felt very tempted to open bag after bag of chips, but I was already starting to feel queazy and stopped myself after two. Luckily, Def Hacks provided some fruits and salads, and I substituted chips with tangerines for my evening snack :)&lt;/p&gt;

&lt;h3 id=&quot;have-fun&quot;&gt;Have fun&lt;/h3&gt;
&lt;p&gt;At the end of the day, a hackathon should be a fun and memorable experience. Luckily for me, a lot of the hackathon volunteers were my classmates, so we had a good time playing ping pong and watching the cup stacking competition together.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;I’m definitely new when it comes to hackathons, and both of my two experiences were very different from what one would usually do at a hackathon. But I just wanted to share my two cents. Hopefully, prospective hackers out there will read this and feel more inclined about going to their first event; hackathons are truly less intimidating than they seem!&lt;/p&gt;</content><author><name></name></author><summary type="html">On April 13, I attended the Def Hacks Seattle 2019 hackathon, hosted by my friend Chris Elliott. This was my second hackathon ever, the first being the Def Hacks Seattle hackathon back in 2017, during which Chris and I co-founded TeamsCode. This time around, I was going in solo and wanted to make some progress on my upcoming project Bidbar. As such, my hackathon experience was a bit atypical; instead of competing and working on a new project, I was coming in with an existing project I wanted to make progress on (I knew I couldn’t compete or present my project since I already worked on it beforehand). In addition, I didn’t stay the whole time; I came at about 11 am and left at 11 pm, so only half of the experience of the full hackathon. Nonetheless, I still learned a lot of things, which I’m going to share in this blog post.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/def_hacks_hackathon.png" /></entry><entry><title type="html">My experience launching Statsify, my first-ever product</title><link href="http://localhost:4000/blog/2019-03-03/my-experience-launching-statsify/" rel="alternate" type="text/html" title="My experience launching Statsify, my first-ever product" /><published>2019-03-03T00:00:00-05:00</published><updated>2019-03-03T00:00:00-05:00</updated><id>http://localhost:4000/blog/2019-03-03/launching-statsify</id><content type="html" xml:base="http://localhost:4000/blog/2019-03-03/my-experience-launching-statsify/">&lt;p&gt;On February 18, I launched &lt;a href=&quot;https://www.statsify.us&quot;&gt;Statsify&lt;/a&gt; on Product Hunt. After a little while, Statsify was featured on the front page, which gave it a decent spike of traffic over the next few days. This blog post talks about my experience throughout both the development process and launch.&lt;/p&gt;

&lt;p&gt;Before we get into the details, here are some basic numbers for those of you curious:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Upvotes on &lt;a href=&quot;https://www.producthunt.com/posts/statsify&quot;&gt;Product Hunt&lt;/a&gt;: 143&lt;/li&gt;
  &lt;li&gt;Upvotes on &lt;a href=&quot;https://www.webdesignernews.com/entry/2550208&quot;&gt;Web Designer News&lt;/a&gt;: 475&lt;/li&gt;
  &lt;li&gt;Unique visitors within first week: 3186&lt;/li&gt;
  &lt;li&gt;Chrome extension users within first week: 49&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;idea-formation&quot;&gt;Idea Formation&lt;/h1&gt;

&lt;p&gt;As a second semester senior in high school, I knew that I was at risk of contracting &lt;a href=&quot;https://en.wikipedia.org/wiki/Senioritis&quot;&gt;senioritis&lt;/a&gt;. To combat this, I decided to keep myself busy by working on random coding projects.&lt;/p&gt;

&lt;p&gt;I felt like learning web scraping, so I decided that I would play around with the Python &lt;a href=&quot;http://docs.python-requests.org/en/master/&quot;&gt;requests&lt;/a&gt; and &lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/&quot;&gt;Beautiful Soup&lt;/a&gt; libraries and see if I could come up with an idea for a full-fledged project along the way.&lt;/p&gt;

&lt;p&gt;Eventually, I came up with Statsify: a web app that visualizes interesting stats and info about a web page/website. I’ve always wanted a tool that could summarize the sites I visit on a daily basis, so this was the perfect chance for me to improve my programming skills while also solving a problem I had!&lt;/p&gt;

&lt;p&gt;All in all, this stage didn’t take up much of my time. Most people say that the idea isn’t &lt;em&gt;that&lt;/em&gt; important. Plus, if you’re a student just trying to get better at coding, any decent idea will do. Take Statsify: the idea is very simple, yet I still learned a ton while making it. And despite not solving some grand issue, it still did pretty well on Product Hunt.&lt;/p&gt;

&lt;h1 id=&quot;development&quot;&gt;Development&lt;/h1&gt;

&lt;p&gt;Before I started developing the product, I did a lot of research on best design practices, testing frameworks, etc. This hindered my progress at first, but in the end, I think it helped me maintain my pace as the project grew larger and more complex. If you’re starting a new project, I’d recommending doing a small amount of research before diving in: too little and your codebase might be a mess later on, while too much and you end up over-thinking instead of just doing.&lt;/p&gt;

&lt;p&gt;I began by coding the backend web scraping functionality. Along the way, I came up with a lot of new ideas, so it was helpful to create a &lt;a href=&quot;https://en.wikipedia.org/wiki/Kanban_board&quot;&gt;Kanban board&lt;/a&gt; in Trello to organize these in Backlog, Pending, In Progress, and Done lists. I found that having lists also helped me prioritize which features to include in my MVP and which I’d have to come back to.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_trello.png&quot; alt=&quot;My Trello board&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Along with the Trello board, unit tests saved me a ton of time. This was my first project with real unit tests, and I’ve lost count of the number of times I changed a few lines of code and broke several unit tests, alerting me of a mistake. If I had to choose one thing I learned the most from the development process, it would be to write unit tests whenever possible, even for small side projects.&lt;/p&gt;

&lt;p&gt;Finally, after I felt good about the backend, I built a simple REST API with Flask and hosted the app on a free Heroku dyno (see &lt;a href=&quot;https://www.statsify.us/api&quot;&gt;here&lt;/a&gt; for documentation). This ended up being more than enough to support the app, with the only downside being that free dynos automatically sleep after 30 minutes of inactivity (I was able to work around this using &lt;a href=&quot;https://coderwall.com/p/u0x3nw/avoid-heroku-idling-with-new-relic-pings&quot;&gt;New Relic pings&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now on to the frontend! Since my original goal was to learn more about web scraping, I put a lot less effort into the code for &lt;a href=&quot;https://www.statsify.us&quot;&gt;https://www.statsify.us&lt;/a&gt;. My goal was simply to create a beautiful home page that could hold its own on Product Hunt. Below is the progression of the website:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_beginning.png&quot; alt=&quot;Screenshot of website at beginning&quot; /&gt;
&lt;em&gt;So far, I’ve just laid out all the elements using default Bootstrap styles.&lt;/em&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_middle.png&quot; alt=&quot;Screenshot of website halfway through&quot; /&gt;
&lt;em&gt;Added some shadows, sharpened corners, and messed with font styling. Looks a lot better!&lt;/em&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_end.png&quot; alt=&quot;Screenshot of website at the end&quot; /&gt;
&lt;em&gt;Finishing touches, including a background image and better header/footer buttons.&lt;/em&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I used &lt;a href=&quot;https://www.chartjs.org/&quot;&gt;Chart.js&lt;/a&gt; for the visualizations:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_visualizations.png&quot; alt=&quot;Screenshot of website visualizations&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;And lastly, the Chrome extension, which would allow users to visualize the pages they’re currently browsing. The extension is really just loading an iframe of statsify.us with a query string for the url to visualize, so it was very low effort. Some parts of the website (search bar, JSON response, and a few other buttons) I felt weren’t worth showing in the Chrome extension, but there was an easy workaround to accomplish that: I simply included the query string extensionMode=true in the iframe src url, and the website JavaScript code could then check for this and change the UI accordingly (click &lt;a href=&quot;https://www.statsify.us?extensionMode=true&amp;amp;url=alanbi.com&quot;&gt;here&lt;/a&gt; to see what it looks like).&lt;/p&gt;

&lt;h1 id=&quot;launch&quot;&gt;Launch&lt;/h1&gt;

&lt;p&gt;At this point, Statsify was ready to launch. After reading Product Hunt’s &lt;a href=&quot;https://blog.producthunt.com/how-to-launch-on-product-hunt-7c1843e06399&quot;&gt;guidelines&lt;/a&gt; and preparing all my press materials, I submitted Statsify a few minutes after midnight on Monday, February 18. The result is as follows:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_traffic.png&quot; alt=&quot;Statsify traffic following the launch&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In the first two days, the website got 2165 unique visitors. Surprisingly, Product Hunt was not the only source of traffic; Statsify got posted by other people (or maybe bots?) on sites like &lt;a href=&quot;https://www.webdesignernews.com/entry/2550208&quot;&gt;Web Designer News&lt;/a&gt; (this is probably where that mysterious spike in traffic came from). In fact, Statsify did &lt;em&gt;really&lt;/em&gt; well on Web Designer News, becoming the top voted submission in the past 90 days:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_webdesignernews.png&quot; alt=&quot;Statsify on Web Designer News&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I ended up getting almost as much traffic from Web Designer News as Product Hunt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog-images/2019/statsify_traffic_sources.png&quot; alt=&quot;Statsify traffic sources (Product Hunt and Web Designer News)&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Overall, I’m very lucky that Statsify was featured on these two sites. A few days later, I posted Statsify on sites like Hacker News and Indie Hackers, although none did nearly as well.&lt;/p&gt;

&lt;h1 id=&quot;main-takeaway&quot;&gt;Main Takeaway&lt;/h1&gt;

&lt;p&gt;I’m probably not the most qualified person to give advice about launching a product; I’m still working it out myself. However, the one suggestion that I feel confident making is to keep your initial product simple. At first, I thought Statsify didn’t have enough features, but then I realized it’s better to wait and gather feedback from users rather than painstakingly developing something that nobody ends up using. If you’re a student like me, you have to balance programming with school and other responsibilities, so it’s important to manage your time well.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Statsify was an amazing learning experience. In the beginning, I never even planned to publicize it. But after deciding to do so, it forced me to hold the project to a higher standard than my other projects, knowing that others could end up using it. I think I learned a lot more this way.&lt;/p&gt;

&lt;p&gt;If you’re working on a side project, it’s worth considering posting it on sites like Product Hunt. The worst case scenario is that no one likes it or uses it, in which case you can go back to developing it as a side project or move on to something else. However, I’d imagine it’s more likely that you’ll get good feedback and insights that you wouldn’t have otherwise. 
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S. If you’re interested in seeing the source code for Statsify, I recently made it public on GitHub, which you can check out &lt;a href=&quot;https://github.com/alankbi/statsify-api&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">On February 18, I launched Statsify on Product Hunt. After a little while, Statsify was featured on the front page, which gave it a decent spike of traffic over the next few days. This blog post talks about my experience throughout both the development process and launch.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/launching_statsify.png" /></entry><entry><title type="html">My first ever blog post</title><link href="http://localhost:4000/blog/2019-02-22/first-blog-post/" rel="alternate" type="text/html" title="My first ever blog post" /><published>2019-02-21T00:00:00-05:00</published><updated>2019-02-21T00:00:00-05:00</updated><id>http://localhost:4000/blog/2019-02-22/first-blog-post</id><content type="html" xml:base="http://localhost:4000/blog/2019-02-22/first-blog-post/">&lt;p&gt;Hello!&lt;/p&gt;

&lt;p&gt;My name is Alan Bi, and I’m a senior at Mercer Island High School. I plan to major in computer science next year, and I’ve decided to start a blog to document my thoughts and experiences as I navigate the field.&lt;/p&gt;

&lt;p&gt;Here are some goals that I have for this blog:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a list of posts that I can look back on in the future&lt;/li&gt;
  &lt;li&gt;Improve my writing skills&lt;/li&gt;
  &lt;li&gt;Share advice with anyone who stumbles upon this&lt;/li&gt;
  &lt;li&gt;Try something new&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ideally, I’d like to blog on a consistent basis; whether that be once a week, two weeks, or even a month, I’m not yet sure. Who knows, maybe this will be my first and &lt;em&gt;last&lt;/em&gt; post ever.&lt;/p&gt;

&lt;p&gt;Anyways, this concludes my first blog post; hopefully I’ll have my second one up in the next week or two.&lt;/p&gt;</content><author><name></name></author><summary type="html">Hello!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blog-images/2019/hello.jpg" /></entry></feed>